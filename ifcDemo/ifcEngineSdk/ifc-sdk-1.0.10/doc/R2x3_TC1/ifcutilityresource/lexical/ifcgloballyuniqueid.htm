
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"  "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-type" content ="text/html; charset=ISO-8859-1">
<title>IfcGloballyUniqueId</title>
<link rel="stylesheet" href="../../secondlevel.css" type="text/css">
</head>
<body CLASS="body-background">
<img src="../img/type_navbar.gif" alt="Navigation" height="24" width="466" border="0" usemap="#type-navbar"/><br/>
<map name="type-navbar">
  <area shape="rect" coords="0,0,62,23" alt="Navigate"href="http://www.iai-tech.org">
  <area shape="rect" coords="63,0,141,23" alt="Navigate"href="../ifcutilityresource.htm">
  <area shape="rect" coords="142,0,244,23" alt="Navigate"href="../diagrams/diagram_0001.htm">
  <area shape="rect" coords="245,0,323,23" alt="Navigate"href="#definition">
  <area shape="rect" coords="324,0,367,23" alt="Navigate"href="#constraint_description">
  <area shape="rect" coords="368,0,464,23" alt="Navigate"href="ifcgloballyuniqueid.htm#references">
</map><p CLASS="object-heading">IfcGloballyUniqueId</p>        
	<p><u>Definition from IAI</u>: Holds an identifier that is unique
	throughout the software world. This is also known as a Globally
    Unique Identifier (GUID) or Universal Unique Identifier (UUID) by
    the Open Group. The identifier is generated using an algorithm published
    by the Object Management Group. The algorithm is explained at the open
	group <a href="http://www.opengroup.org/dce/info/draft-leach-uuids-guids-01.txt">
    website</a>. The Microsoft Foundation Class (MFC) function "CoCreateGuid",
    which is an implementation of the above algorithm, has been used by
    many IFC implementers to create an identifier.</p>

	<p>An identifier is a unique 128-bit number. Since this identifier is
    required for all IFC object instances, it is desirable to compress the
    identifier size to reduce overhead. Beginning in IFC R1.5.1, IFC
    implementers agreed to compress the identifier down to 20 characters
    using an algorithm developed by IAI Implementers. This algorithm maps
    the identifier bits onto a base 85 digit encoded from the following
    character set:</p>
    <p>0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz!#$%&amp;^|*+,-./:;&lt;=&gt;?~`@_</p>
    <p>An index (0-84) into this character set string determines the "value"
    for each character (e.g. "A" has a value of 10, "@" has a value of 83, etc.).
    Note that all characters are case-sensitive. In order to prevent possible
    problems with some parsers, implementers have agreed not to use the "/*"
    and "*/" character combinations in the identifier string and instead to
    use "\*" and "*\".</p>
	<p>The implementation of the compression algorithm has changed in IFC
	R2x in order to prevent conflicts with special characters in the ISO
	10303-21 exchange file and the W3C XML file (such as '&lt;*',
    '*&gt;', '&lt;' and '&gt;'). Using 64 characters for the base rather
    than 85, the resulting compressed string now needs 22 characters.
    The encoding of the base 64 character set is shown below:</p>

    <blockquote>
		<p><font FACE="Courier New" size="-1">
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6
		<br>&nbsp;0123456789012345678901234567890123456789012345678901234567890123<br>
		"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_$";
        </font></p>
    </blockquote>

	<p>The following code example in C is given as a guideline for creating
	the base 64 compressed strings and for mapping the previous base 85 strings to
	the base 64 strings. This code is provided "as-is" with no support or
    guarantee of suitability provided by the IAI. Use of the code example is at
    the sole risk of the user.</p>

    <ul>
		<li><a href="text/CreateGuid_64.h" target="new">CreateGuid_64.h</a></li>
		<li><a href="text/CreateGuid_64.c" target="new">CreateGuid_64.c</a></li>
	</ul>
	<p>The resulting string is a fixed 22 character length string to be
	exchanged within the IFC exchange file structure.</p>
	
    <blockquote>
	<font size="-1" color="#0000FF">
    <p>
    	HISTORY: New type in IFC R1.5.1.<br>
	        </p>
	</font>
    </blockquote>

<br/>
        <p CLASS="object-express-specification">EXPRESS specification:</p>
        <table CLASS="object-express-source" width="100%" cellspacing="0" cellpadding="0">
          <tr valign="top">
            <td width="2%">
            </td>
            <td>
              <table CLASS="object-express-source" width="100%" cellspacing="0" cellpadding="0">
                <tr valign="top">
                  <td><SPAN CLASS="all-express-keywords"><a name="definition">TYPE</a></SPAN> IfcGloballyUniqueId = STRING (22) FIXED;
                  </td>
                </tr>
              </table>
              <table CLASS="object-express-source" width="100%" cellspacing="0" cellpadding="0">
                <tr valign="top">
                  <td><SPAN CLASS="all-express-keywords">END_TYPE</SPAN>;
                  </td>
                </tr>
              </table>
            </td>
          </tr>
        </table>
</body>
</html>